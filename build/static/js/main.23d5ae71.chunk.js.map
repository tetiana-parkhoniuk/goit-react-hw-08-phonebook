{"version":3,"sources":["components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","components/Loader/Loader.js","App.js","redux/store.js","index.js","services/contactsAPI.js","redux/contacts/contacts-operations.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-slice.js","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-slice.js","services/authAPI.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/AppBar/AppBar.module.css","components/Loader/Loader.module.css","App.module.css"],"names":["Navigation","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","className","styles","nav","exact","to","navLink","activeClassName","activeNavLink","UserMenu","dispatch","useDispatch","name","getUsername","container","Avatar","alt","text","Button","type","onClick","authOperations","logout","variant","color","AuthNav","link","activeLink","AppBarMui","AppBar","appBar","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","Loader","loader","height","width","timeout","HomeView","lazy","RegisterView","LoginView","ContactsView","theme","createTheme","typography","palette","primary","light","main","dark","contrastText","secondary","App","isFetchingCurrentUser","getIsFetchingCurrentUser","useEffect","fetchCurrentUser","ThemeProvider","Container","maxWidth","autoClose","position","bodyContainer","fallback","path","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","middleware","thunk","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","fetchContacts","a","get","response","data","createContact","contact","post","deleteContact","id","delete","createAsyncThunk","contactsAPI","module","exports","authSlice","createSlice","initialState","user","email","token","extraReducers","register","fulfilled","state","payload","login","action","pending","rejected","contactsSlice","entities","status","error","filter","reducers","changeFilter","actions","credentials","_","thunkAPI","headers","common","Authorization","rejectWithValue","authAPI","toast","success","message","warn","getState","persistedToken"],"mappings":"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","file":"static/js/main.23d5ae71.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from 'redux/auth';\nimport styles from './Navigation.module.css';\n\nexport default function Navigation() {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n    return (\n        <nav className={styles.nav}>\n            <NavLink\n                exact\n                to=\"/\" \n                className={styles.navLink} \n                activeClassName={styles.activeNavLink}\n            >\n                Home\n            </NavLink>\n\n            {isLoggedIn && (\n                <NavLink\n                to=\"/contacts\" \n                className={styles.navLink} \n                activeClassName={styles.activeNavLink}\n            >\n                Phonebook\n            </NavLink>\n            )}\n        </nav>\n    )\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport styles from './UserMenu.module.css';\nimport { Button } from '@material-ui/core';\nimport { Avatar } from '@material-ui/core';\n\nexport default function UserMenu() {\n    const dispatch = useDispatch();\n    const name = useSelector(authSelectors.getUsername);\n    \n    return (\n        <div className={styles.container}>\n            <Avatar alt={name}></Avatar>\n            <span className={styles.text}>Welcome, {name}</span>\n            <Button\n                type=\"button\"\n                onClick={() => dispatch(authOperations.logout())}\n                variant=\"contained\"\n                color=\"secondary\"\n            >\n                Log Out\n            </Button>\n        </div>\n    );\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nexport default function AuthNav() {\n    return (\n        <div>\n            <NavLink\n                to=\"/register\"\n                exact\n                className={styles.link}\n                activeClassName={styles.activeLink}\n            >\n                Register\n            </NavLink>\n            <NavLink\n                to=\"/login\"\n                exact\n                className={styles.link}\n                activeClassName={styles.activeLink}\n            >\n                Login\n            </NavLink>\n        </div>\n    );\n}","import { useSelector } from \"react-redux\";\nimport Navigation from \"components/Navigation\";\nimport UserMenu from \"components/UserMenu\";\nimport AuthNav from \"components/AuthNav\";\nimport { authSelectors } from \"redux/auth\";\nimport { AppBar } from \"@material-ui/core\";\nimport styles from './AppBar.module.css';\n\n\n\nexport default function AppBarMui() {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    return (\n        <AppBar>\n            <div className={styles.appBar}>\n                <Navigation />\n                {isLoggedIn ? <UserMenu /> : <AuthNav />}\n            </div>\n        </AppBar>\n    );\n}","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"redux/auth\";\n\nexport default function PrivateRoute({\n    children,\n    redirectTo = \"/\",\n    ...routeProps }) {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    return (\n        <Route {...routeProps}>\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\n        </Route>\n    );\n};","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"redux/auth\";\n\nexport default function PublicRoute({\n    children,\n    restricted = false,\n    redirectTo = \"/\",\n    ...routeProps }) {\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n    const shouldRedirect = isLoggedIn && restricted;\n    return (\n        <Route {...routeProps}>\n            {shouldRedirect ? <Redirect to={redirectTo}/> : children}\n        </Route>\n    );\n};","import Spinner from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nexport default function Loader() {\n  return (\n    <div className={styles.loader}>\n      <Spinner\n        type=\"Circles\"\n        color=\"#ffcf33\"\n        height={100}\n        width={100}\n        timeout={2000}\n      />\n    </div>\n  );\n}","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport AppBarMui from 'components/AppBar';\nimport PrivateRoute from 'components/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute';\nimport Loader from 'components/Loader';\nimport { authOperations, authSelectors } from 'redux/auth';\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\nimport '@fontsource/roboto';\nimport { Container } from '@material-ui/core';\nimport styles from './App.module.css';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView/HomeView' /* webpackChunkName: \"home-view\" */),\n);\nconst RegisterView = lazy(() =>\n  import(\n    './views/RegisterView/RegisterView' /* webpackChunkName: \"register-view\" */\n  ),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView/LoginView' /* webpackChunkName: \"login-view\" */),\n);\nconst ContactsView = lazy(() =>\n  import(\n    './views/ContactsView/ContactsView' /* webpackChunkName: \"contacts-view\" */\n  ),\n);\n\nconst theme = createTheme({\n  typography: {},\n  palette: {\n    primary: {\n      light: '#6573c3',\n      main: '#3f51b5',\n      dark: '#2c387e',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ffcf33',\n      main: '#ffc400',\n      dark: '#b28900',\n      contrastText: '#fff',\n    },\n  },\n});\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(\n    authSelectors.getIsFetchingCurrentUser,\n  );\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchingCurrentUser && (\n      <ThemeProvider theme={theme}>\n        <Container maxWidth=\"md\">\n          <AppBarMui />\n          <ToastContainer autoClose={3000} position=\"top-right\" />\n\n          <div className={styles.bodyContainer}>\n            <Switch>\n              <Suspense fallback={<Loader />}>\n                <PublicRoute exact path=\"/\">\n                  <HomeView />\n                </PublicRoute>\n\n                <PublicRoute path=\"/register\" restricted>\n                  <RegisterView />\n                </PublicRoute>\n\n                <PublicRoute path=\"/login\" restricted>\n                  <LoginView />\n                </PublicRoute>\n\n                <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                  <ContactsView />\n                </PrivateRoute>\n              </Suspense>\n            </Switch>\n          </div>\n        </Container>\n      </ThemeProvider>\n    )\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-slice';\nimport authReducer from './auth/auth-slice';\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token'],\n};\n\n\nexport const store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: contactsReducer,\n    },\n    middleware: [thunk, logger],\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport {store, persistor} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n\nexport const fetchContacts = async () => {\n    const response = await axios.get(`/contacts`);\n    return response.data;\n};\n\nexport const createContact = async (contact) => {\n    const response = await axios.post(`/contacts`, contact);\n    return response.data;\n};\n\nexport const deleteContact = async (id) => {\n    await axios.delete(`/contacts/${id}`);\n};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactsAPI from '../../services/contactsAPI';\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/fetchContacts',\n    async () => {\n        const contacts = await contactsAPI.fetchContacts();\n        return contacts;\n    }\n);\n\nexport const createContact = createAsyncThunk(\n    'contacts/createContact',\n    async (contact) => {\n        const data = await contactsAPI.createContact(contact);\n        return data;\n    }\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/deleteContact',\n    async (id) => {\n        await contactsAPI.deleteContact(id);\n        return id;\n    }\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__2U8pw\",\"activeNavLink\":\"Navigation_activeNavLink__1M6Zj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2ejsg\",\"activeLink\":\"AuthNav_activeLink__3huQJ\"};","import { createSlice } from \"@reduxjs/toolkit\";\nimport { authOperations } from \".\";\n\nconst initialState = {\n    user: { name: null, email: null },\n    token: null,\n    isLoggedIn: false,\n    isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    extraReducers: {\n        [authOperations.register.fulfilled](state, {payload}) {\n            state.user = payload.user;\n            state.token = payload.token;\n            state.isLoggedIn = true;\n        },\n        [authOperations.login.fulfilled](state, {payload}) {\n            state.user = payload.user;\n            state.token = payload.token;\n            state.isLoggedIn = true;\n        },\n        [authOperations.logout.fulfilled](state, action) {\n            state.user = { name: null, email: null };\n            state.token = null;\n            state.isLoggedIn = false;\n        },\n        [authOperations.fetchCurrentUser.pending](state) {\n            state.isFetchingCurrentUser = true;\n        },\n        [authOperations.fetchCurrentUser.fulfilled](state, { payload }) {\n            state.user = payload;\n            state.isLoggedIn = true;\n            state.isFetchingCurrentUser = false;\n        },\n        [authOperations.fetchCurrentUser.rejected](state) {\n            state.isFetchingCurrentUser = false;\n        },\n    },\n});\n\nexport default authSlice.reducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__GgYhE\",\"text\":\"UserMenu_text__3m5R_\"};","import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts, createContact, deleteContact } from './contacts-operations';\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState: { entities: [], status: null, error: null, filter: '' },\n    reducers: {\n        changeFilter: (state, {payload}) => {state.filter = payload},\n    },\n    extraReducers: {\n        [fetchContacts.fulfilled]: (state, { payload }) => {\n            state.entities = payload;\n            state.status = null;\n            state.error = null;\n        },\n        [fetchContacts.pending]: (state, action) => {\n            state.status = 'loading';\n            state.error = null;\n        },\n        [fetchContacts.rejected]: (state, action) => {\n            state.status = 'rejected';\n            state.error = 'Error';\n        },\n\n        [createContact.fulfilled]: (state, {payload}) => {\n            state.entities = [payload, ...state.entities];\n            state.status = null;\n            state.error = null;\n         },\n        [createContact.pending]: (state, action) => {\n            state.status = 'loading';\n            state.error = null;\n        },\n        [createContact.rejected]: (state, action) => {\n            state.status = 'rejected';\n            state.error = 'Error';\n        },\n        \n        [deleteContact.fulfilled]: (state, {payload}) => {\n            state.entities = state.entities.filter((contact) =>\n                contact.id !== payload);\n            state.status = null;\n            state.error = null;\n         },\n        [deleteContact.pending]: (state, action) => {\n            state.status = 'loading';\n            state.error = null;\n        },\n        [deleteContact.rejected]: (state, action) => {\n            state.status = 'rejected';\n            state.error = 'Error';\n        },\n    },\n});\n\nexport const { changeFilter } = contactsSlice.actions;\nexport default contactsSlice.reducer;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const register = async (credentials) => {\n    const response = await axios.post('/users/signup', credentials);\n    return response.data;\n};\n\nexport const login = async (credentials) => {\n    const response = await axios.post('/users/login', credentials);\n    return response.data;\n};\n\nexport const logout = async () => {\n    await axios.post('/users/logout');\n};\n\nexport const fetchCurrentUser = async (_, thunkAPI) => {\n    const response = await axios.get('/users/current');\n    return response.data;\n};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as authAPI from '../../services/authAPI';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nexport const register = createAsyncThunk(\n    'auth/register',\n    async (credentials, { rejectWithValue }) => {\n        try {\n            const data = await authAPI.register(credentials);\n            token.set(data.token);\n            toast.success('Welcome to the Phonebook!')\n            return data;\n        } catch (error) {\n            toast.error(\n                'Please check maybe you are already registered. Also, Name field requires your Name and Surname, and password should consist of numbers and leters, and at least 7 characters.'\n            );\n            return rejectWithValue(error.message);\n        };\n    }\n);\n\nexport const login = createAsyncThunk(\n    'auth/login',\n    async (credentials, { rejectWithValue }) => {\n        try {\n            const data = await authAPI.login(credentials);\n            token.set(data.token);\n            toast.success('Welcome back to the Phonebook');\n            return data;\n        } catch (error) {\n            toast.warn('Please check your login details and try again');\n            return rejectWithValue(error.message);\n        };\n    }\n);\n\nexport const logout = createAsyncThunk(\n    'auth/logout',\n    async (_, { rejectWithValue }) => {\n        try {\n            await authAPI.logout();\n            token.unset();\n            toast.success('You have successfully logged out. See you later.');\n        } catch (error) {\n            toast.error('Something went wrong. Try to Log Out one more time.');\n            return rejectWithValue(error.message);\n        };\n    }\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n    'auth/refresh',\n    async (_, thunkAPI) => {\n        const state = thunkAPI.getState();\n        const persistedToken = state.auth.token;\n        \n        if (persistedToken === null) {\n            return thunkAPI.rejectWithValue();\n        }\n\n        token.set(persistedToken);\n\n        try {\n            const data = await authAPI.fetchCurrentUser();\n            return data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error.message);\n        };\n    }\n);\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrentUser = state => state.auth.getIsFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrentUser,\n};\n\nexport default authSelectors;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBar\":\"AppBar_appBar__2SJuM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"App_bodyContainer___-5mK\"};"],"sourceRoot":""}